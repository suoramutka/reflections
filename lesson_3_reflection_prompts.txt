When would you want to use a remote repository rather than keeping all your work local?
- when there's more than one computer or person to work with 

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- to have a better control of updates and to avoid unexpected troubleshooting when changes/commits are done by more than one person

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- branches are good for making and testing new versions which are different from the main dev line and won't mess that up. Clones are copies of repositories which could be at different locations and which are made for users to obtain a development copy for repo-to-repo collaboration. Forks are copies of repos on the server side.

What is the benefit of having a copy of the last known state of the remote stored locally?
- developer is aware of new changed made by others and can take changes into account

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- I would be sending files with info about changes on a server, perhaps into a SVN repository. Workin as a single developer with central repository and committing would perhaps be easier but comparing repositories while collaborating and merging versions would be harder.

